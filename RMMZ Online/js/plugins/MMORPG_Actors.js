/*!
 * /*:
 * @target MZ
 * @plugindesc Level, Exp, Attributes
 * @author rmalizia44@gmail.com
 * @url https://rmalizia44.itch.io/
 * @help
 *
 * ⚔️ MMORPG Maker Plugin 0.9.1
 *
 * Actors are automatically synced, including key attributes like HP, MP,
 * level, and classes, so players see their characters updated in real time.
 *
 * 💖 Special Thanks to Our Patrons!
 *
 * A huge shout-out to everyone supporting the project through Patreon!
 * Your contributions help keep this plugin alive and growing. Here are
 * the amazing supporters from each tier:
 *
 * 🏆 Champion Tier
 *
 * - Emerson
 * - James Shmo
 *
 * 🌟 Legendary Tier
 *
 * - Alexis Naboulet
 * - Ansgar
 * - David Cuellar
 * - Zufran
 *
 * ✨ Epic Tier
 *
 * - Lupilo
 * - Mr.Timbaba
 *
 *
 * @base MMORPG_Client
 * @orderAfter MMORPG_Client
 *
 */(()=>{"use strict";const t=window,e=window.client;const s=function(...t){};function r(t,e){return t.length==e.length&&t.every(((t,s)=>t===e[s]))}t.Game_Actor.prototype.loaded=function(){return!0},t.Game_Actor.prototype.remote=function(){return""},t.Game_Actor.prototype.mustSync=function(){return this.loaded()&&!this._deepCopy&&!this.remote()},t.Game_Actor.prototype.isLeader=function(){return this===t.$gameParty.leader()},t.Game_Actor.prototype.recalcLevel=function(){for(this._level=0;!this.isMaxLevel()&&this.currentExp()>=this.nextLevelExp();)this._level+=1;for(;this._level>0&&this.currentExp()<this.currentLevelExp();)this._level-=1},t.Game_Actor.prototype.dataName=function(){return`actor${this.actorId()}`},t.Game_Actor.prototype.correctedHp=function(){return Math.max(0,Math.min(this.hp,this.mhp))},t.Game_Actor.prototype.correctedMp=function(){return Math.max(0,Math.min(this.mp,this.mmp))},t.Game_Actor.prototype.correctedTp=function(){return Math.max(0,Math.min(this.tp,this.maxTp()))},t.Game_Actor.prototype.onChangeName=function(){e.save(!1,this.dataName(),{name:this._name})},t.Game_Actor.prototype.onChangeNickname=function(){e.save(!1,this.dataName(),{nickname:this._nickname})},t.Game_Actor.prototype.onChangeProfile=function(){e.save(!1,this.dataName(),{profile:this._profile})},t.Game_Actor.prototype.onChangeCharacter=function(){e.save(!1,this.dataName(),{char:[this._characterName,this._characterIndex]})},t.Game_Actor.prototype.onChangeFace=function(){e.save(!1,this.dataName(),{face:[this._faceName,this._faceIndex]})},t.Game_Actor.prototype.onChangeBattler=function(){e.save(!1,this.dataName(),{battler:this._battlerName})},t.Game_Actor.prototype.onChangeClassExp=function(){e.save(!1,this.dataName(),{classId:this._classId,exps:Object.entries(this._exp)})},t.Game_Actor.prototype.onChangeHp=function(){e.save(!1,this.dataName(),{hp:this.correctedHp()})},t.Game_Actor.prototype.onChangeMp=function(){e.save(!1,this.dataName(),{mp:this.correctedMp()})},t.Game_Actor.prototype.onChangeTp=function(){},t.Game_Actor.prototype.onChangeSkills=function(){e.save(!1,this.dataName(),{skills:this._skills})},t.Game_Actor.prototype.onChangeEquips=function(){e.save(!1,this.dataName(),{equips:this._equips.map((t=>t._itemId))})},t.Game_Actor.prototype.onChangeStates=function(){e.save(!1,this.dataName(),{states:this._states})},t.Game_Actor.prototype.onChangeBuffs=function(){};const o=t.Game_Actor.prototype.setName;t.Game_Actor.prototype.setName=function(t){const e=this._name;o.call(this,t),this.mustSync()&&e!==this._name&&this.onChangeName()};const a=t.Game_Actor.prototype.setNickname;t.Game_Actor.prototype.setNickname=function(t){const e=this._nickname;a.call(this,t),this.mustSync()&&e!==this._nickname&&this.onChangeNickname()};const n=t.Game_Actor.prototype.setProfile;t.Game_Actor.prototype.setProfile=function(t){const e=this._profile;n.call(this,t),this.mustSync()&&e!==this._profile&&this.onChangeProfile()};const c=t.Game_Actor.prototype.setCharacterImage;t.Game_Actor.prototype.setCharacterImage=function(t,e){const s=this._characterName,r=this._characterIndex;c.call(this,t,e),this.mustSync()&&(s===this._characterName&&r===this._characterIndex||this.onChangeCharacter())};const i=t.Game_Actor.prototype.setFaceImage;t.Game_Actor.prototype.setFaceImage=function(t,e){const s=this._faceName,r=this._faceIndex;i.call(this,t,e),this.mustSync()&&(s===this._faceName&&r===this._faceIndex||this.onChangeFace())};const h=t.Game_Actor.prototype.setBattlerImage;t.Game_Actor.prototype.setBattlerImage=function(t){const e=this._battlerName;h.call(this,t),this.mustSync()&&e!==this._battlerName&&this.onChangeBattler()};const p=t.Game_Actor.prototype.die;t.Game_Actor.prototype.die=function(){const t=this.correctedHp();p.call(this);const e=this.correctedHp();this.mustSync()&&t!==e&&this.onChangeHp()};const m=t.Game_Actor.prototype.revive;t.Game_Actor.prototype.revive=function(){const t=this.correctedHp();m.call(this);const e=this.correctedHp();this.mustSync()&&t!==e&&this.onChangeHp()};const y=t.Game_Actor.prototype.setHp;t.Game_Actor.prototype.setHp=function(t){const e=this.correctedHp();y.call(this,t);const s=this.correctedHp();this.mustSync()&&e!==s&&this.onChangeHp()};const u=t.Game_Actor.prototype.setMp;t.Game_Actor.prototype.setMp=function(t){const e=this.correctedMp();u.call(this,t);const s=this.correctedMp();this.mustSync()&&e!==s&&this.onChangeMp()};const l=t.Game_Actor.prototype.setTp;t.Game_Actor.prototype.setTp=function(t){const e=this.correctedTp();l.call(this,t);const s=this.correctedTp();this.mustSync()&&e!==s&&this.onChangeTp()};const _=t.Game_Actor.prototype.refresh;t.Game_Actor.prototype.refresh=function(){const t=this.correctedHp(),e=this.correctedMp(),s=this.correctedTp();if(_.call(this),!this.mustSync())return;const r=this.correctedHp(),o=this.correctedMp(),a=this.correctedTp();t!==r&&this.onChangeHp(),e!==o&&this.onChangeMp(),s!==a&&this.onChangeTp()};const d=t.Game_Actor.prototype.recoverAll;t.Game_Actor.prototype.recoverAll=function(){const t=this.correctedHp(),e=this.correctedMp(),s=this.correctedTp();if(d.call(this),!this.mustSync())return;const r=this.correctedHp(),o=this.correctedMp(),a=this.correctedTp();t!==r&&this.onChangeHp(),e!==o&&this.onChangeMp(),s!==a&&this.onChangeTp()};const f=t.Game_Actor.prototype.paySkillCost;t.Game_Actor.prototype.paySkillCost=function(t){const e=this.correctedMp(),s=this.correctedTp();if(f.call(this,t),!this.mustSync())return;const r=this.correctedMp(),o=this.correctedTp();e!==r&&this.onChangeMp(),s!==o&&this.onChangeTp()};const A=t.Game_Actor.prototype.initExp;t.Game_Actor.prototype.initExp=function(){const t=this._classId,e=this._exp[this._classId]||0;if(A.call(this),!this.mustSync())return;const s=this._classId,r=this._exp[this._classId]||0;t===s&&e===r||this.onChangeClassExp()};const g=t.Game_Actor.prototype.changeClass;t.Game_Actor.prototype.changeClass=function(t,e){const s=this._classId,r=this._exp[this._classId]||0;if(g.call(this,t,e),!this.mustSync())return;const o=this._classId,a=this._exp[this._classId]||0;s===o&&r===a||this.onChangeClassExp()};const k=t.Game_Actor.prototype.changeExp;t.Game_Actor.prototype.changeExp=function(t,e){const s=this._classId,r=this._exp[this._classId]||0;if(k.call(this,t,e),!this.mustSync())return;const o=this._classId,a=this._exp[this._classId]||0;s===o&&r===a||this.onChangeClassExp()};const C=t.Game_Actor.prototype.tradeItemWithParty;t.Game_Actor.prototype.tradeItemWithParty=function(t,e){return!!this.mustSync()&&C.call(this,t,e)};const G=t.Game_Actor.prototype.initEquips;t.Game_Actor.prototype.initEquips=function(t){s("EQUIP: initEquips");const e=this._equips?this._equips.map((t=>t._itemId)):[];if(G.call(this,t),!this.mustSync())return;r(e,this._equips.map((t=>t._itemId)))||this.onChangeEquips()};const P=t.Game_Actor.prototype.changeEquip;t.Game_Actor.prototype.changeEquip=function(t,e){s("EQUIP: changeEquip");const o=this._equips.map((t=>t._itemId));if(P.call(this,t,e),!this.mustSync())return;r(o,this._equips.map((t=>t._itemId)))||this.onChangeEquips()};const S=t.Game_Actor.prototype.forceChangeEquip;t.Game_Actor.prototype.forceChangeEquip=function(t,e){s("EQUIP: forceChangeEquip");const o=this._equips.map((t=>t._itemId));if(S.call(this,t,e),!this.mustSync())return;r(o,this._equips.map((t=>t._itemId)))||this.onChangeEquips()};const D=t.Game_Actor.prototype.discardEquip;t.Game_Actor.prototype.discardEquip=function(t){s("EQUIP: discardEquip");const e=this._equips.map((t=>t._itemId));if(D.call(this,t),!this.mustSync())return;r(e,this._equips.map((t=>t._itemId)))||this.onChangeEquips()};const I=t.Game_Actor.prototype.releaseUnequippableItems;t.Game_Actor.prototype.releaseUnequippableItems=function(t){s("EQUIP: releaseUnequippableItems");const e=this._equips.map((t=>t._itemId));if(I.call(this,t),!this.mustSync())return;r(e,this._equips.map((t=>t._itemId)))||this.onChangeEquips()};const v=t.Game_Actor.prototype.initSkills;t.Game_Actor.prototype.initSkills=function(){const t=this._skills?Array.from(this._skills):[];v.call(this),this.mustSync()&&!r(t,this._skills)&&this.onChangeSkills()};const b=t.Game_Actor.prototype.learnSkill;t.Game_Actor.prototype.learnSkill=function(t){const e=!this.isLearnedSkill(t);b.call(this,t),this.mustSync()&&e&&this.onChangeSkills()};const E=t.Game_Actor.prototype.forgetSkill;t.Game_Actor.prototype.forgetSkill=function(t){const e=this.isLearnedSkill(t);E.call(this,t),this.mustSync()&&e&&this.onChangeSkills()};const N=t.Game_Actor.prototype.clearStates;t.Game_Actor.prototype.clearStates=function(){const t=this._states&&this._states.length>0;N.call(this),this.mustSync()&&t&&this.onChangeStates()};const q=t.Game_Actor.prototype.eraseState;t.Game_Actor.prototype.eraseState=function(t){const e=this.isStateAffected(t);q.call(this,t),this.mustSync()&&e&&this.onChangeStates()};const x=t.Game_Actor.prototype.resetStateCounts;t.Game_Actor.prototype.resetStateCounts=function(t){const e=this._stateTurns[t];x.call(this,t),this.mustSync()&&e!==this._stateTurns[t]&&this.onChangeStates()};const $=t.Game_Actor.prototype.updateStateTurns;t.Game_Actor.prototype.updateStateTurns=function(){const t=this._states.some((t=>this._stateTurns[t]>0));$.call(this),this.mustSync()&&t&&this.onChangeStates()};const M=t.Game_Actor.prototype.addNewState;t.Game_Actor.prototype.addNewState=function(t){const e=!this.isStateAffected(t);M.call(this,t),this.mustSync()&&e&&this.onChangeStates()};const T=t.Game_Actor.prototype.clearBuffs;t.Game_Actor.prototype.clearBuffs=function(){const t=this._buffs?.some((t=>!!t));T.call(this),this.mustSync()&&t&&this.onChangeBuffs()};const B=t.Game_Actor.prototype.eraseBuff;t.Game_Actor.prototype.eraseBuff=function(t){const e=this.isBuffOrDebuffAffected(t);B.call(this,t),this.mustSync()&&e&&this.onChangeBuffs()};const w=t.Game_Actor.prototype.increaseBuff;t.Game_Actor.prototype.increaseBuff=function(t){const e=!this.isMaxBuffAffected(t);w.call(this,t),this.mustSync()&&e&&this.onChangeBuffs()};const L=t.Game_Actor.prototype.decreaseBuff;t.Game_Actor.prototype.decreaseBuff=function(t){const e=!this.isMaxDebuffAffected(t);L.call(this,t),this.mustSync()&&e&&this.onChangeBuffs()};const H=t.Game_Actor.prototype.overwriteBuffTurns;t.Game_Actor.prototype.overwriteBuffTurns=function(t,e){const s=this._buffTurns[t]<e;H.call(this,t,e),this.mustSync()&&s&&this.onChangeBuffs()};const O=t.Game_Actor.prototype.updateBuffTurns;t.Game_Actor.prototype.updateBuffTurns=function(){const t=this._buffTurns.some((t=>t>0));O.call(this),this.mustSync()&&t&&this.onChangeBuffs()},e.start(!1,"actors",(async e=>{const s=[];for(const r in e){const o=e[r],a=Number(r);Number.isSafeInteger(a)&&o&&s.push(t.$gameActors.fetchAsync(a))}await Promise.all(s)}));class F extends t.Game_Actor{_loaded;constructor(t){super(t),this._loaded=!0}loaded(){return!!this._loaded}}t.Game_Actors.prototype.fetchAsync=async function(s){if(!t.$dataActors[s])return null;const r=new F(s);this._data[s]=r;const{name:o,nickname:a,profile:n,char:c,face:i,battler:h,hp:p,mp:m,classId:y,exps:u,skills:l,equips:_,states:d}=await e.loadAsync(!1,r.dataName());if("string"==typeof o&&(r._name=o),"string"==typeof a&&(r._nickname=a),"string"==typeof n&&(r._profile=n),Array.isArray(c)&&"string"==typeof c[0]&&"number"==typeof c[1]&&(r._characterName=c[0],r._characterIndex=c[1]),Array.isArray(i)&&"string"==typeof i[0]&&"number"==typeof i[1]&&(r._faceName=i[0],r._faceIndex=i[1]),"string"==typeof h&&(r._battlerName=h),"number"==typeof p&&(r._hp=p),"number"==typeof m&&(r._mp=m),"number"==typeof y&&(r._classId=y),Array.isArray(u)&&u.every((t=>Array.isArray(t)))){r._exp={};for(const t of u){const e=Number(t[0]),s=Number(t[1]);Number.isSafeInteger(e)&&Number.isSafeInteger(s)&&(r._exp[e]=s)}}if(r._exp[r._classId]||(r._exp[r._classId]=0),Array.isArray(l)&&l.every((t=>Number.isSafeInteger(t)))&&(r._skills=Array.from(l)),Array.isArray(_)){const e=r.equipSlots();r._equips=e.map((()=>new t.Game_Item));for(let t=0;t<e.length;++t){const s=_[t];if(!Number.isSafeInteger(s))continue;const o=1===e[t];r._equips[t].setEquip(o,s)}}if(Array.isArray(d)){r.clearStates();for(const t of d)Number.isSafeInteger(t)&&(r._states.push(t),r.resetStateCounts(t))}return r.recalcLevel(),r.removeBattleStates(),r};const U=t.Game_Actors.prototype.actor;function j(e){e.length<1&&console.error("empty party"),t.$gameParty._actors=e.filter((e=>t.$gameActors.actor(e)))}function Q(t,e){return t.length==e.length&&t.every(((t,s)=>t===e[s]))}t.Game_Actors.prototype.actor=function(s){return t.$dataActors[s]&&!this._data[s]&&e.save(!1,"actors",{[s]:!0}),U.call(this,s)},t.Game_Party.prototype.onChangeMembers=function(){e.save(!1,"party",{members:t.$gameParty._actors})},t.Game_Party.prototype.setupStartingMembers=function(){this._actors=[]};const W=t.Game_Party.prototype.removeInvalidMembers;t.Game_Party.prototype.removeInvalidMembers=function(){const e=Array.from(this._actors);W.call(this),Q(e,t.$gameParty._actors)||this.onChangeMembers()};const J=t.Game_Party.prototype.addActor;t.Game_Party.prototype.addActor=function(e){const s=Array.from(this._actors);J.call(this,e),Q(s,t.$gameParty._actors)||this.onChangeMembers()};const Z=t.Game_Party.prototype.removeActor;t.Game_Party.prototype.removeActor=function(e){const s=Array.from(this._actors);Z.call(this,e),Q(s,t.$gameParty._actors)||this.onChangeMembers()};const K=t.Game_Party.prototype.swapOrder;t.Game_Party.prototype.swapOrder=function(e,s){const r=Array.from(this._actors);K.call(this,e,s),Q(r,t.$gameParty._actors)||this.onChangeMembers()},e.start(!1,"party",(e=>{const{members:s}=e;!Array.isArray(s)||s.length<1?j(t.$dataSystem.partyMembers):j(s.filter(Number.isSafeInteger))}));const z=t.Scene_Gameover.prototype.start;t.Scene_Gameover.prototype.start=function(){z.call(this);for(const e of t.$gameParty.allBattleMembers())e.remote()||(e.die(),e.refresh())},t.Game_Actor.prototype.rawSetEquipmentLevel=t.Game_Actor.prototype.setEquipmentLevel,t.Game_Actor.prototype.setEquipmentLevel=function(t,e){if(this._deepCopy||this.remote())return;const s=t?this.getEquipmentKey(t):null,r=s?this._equipmentLevels[s]:null;this.rawSetEquipmentLevel(t,e);r!==(s?this._equipmentLevels[s]:null)&&this.onChangeEquipmentLevel(s)},t.Game_Actor.prototype.onChangeEquipmentLevel=function(t){e.save(!1,`equipmentLevel${this.actorId()}`,{[t]:this._equipmentLevels[t]})};const R=t.Game_Actors.prototype.fetchAsync;t.Game_Actors.prototype.fetchAsync=async function(r){const o=await R.call(this,r);if(o&&o.rawSetEquipmentLevel&&o.initEquipmentConditions){const s=await e.loadAsync(!1,`equipmentLevel${o.actorId()}`);for(const[e,r]of Object.entries(s)){const[s,a]=e.split("_"),n=Number(a);if(!Number.isSafeInteger(n)||n<1){console.error("invalid equipment id:",e,r);continue}let c;if("Weapon"===s)c=t.$dataWeapons[n];else{if("Armor"!==s){console.error("invalid equipment type:",e,r);continue}c=t.$dataArmors[n]}"number"==typeof r&&Number.isSafeInteger(r)?(o.rawSetEquipmentLevel(c,r),o.initEquipmentConditions(c,!0)):console.error("invalid equipment level:",e,r)}o.refresh()}else s("no equipment level");return o};const V=window.Myth;function X(t){return function(t){switch(t){case"learned":return"L";case"equip":return"E";case"state":return"S";case"copy":return"C";case"fusion":return"F";case"empty":return"Z";default:return"?"}}(t._origin)+t._skillId.toString()}function Y(t){return t?t._data.map(X):[]}function tt(t){return t?t.map((t=>[t.name,Y(t)])):[]}function et(e,s){if("string"!=typeof s)return console.error("invalid myth card:",s);const r=function(t){switch(t){case"L":return"learned";case"E":return"equip";case"S":return"state";case"C":return"copy";case"F":return"fusion";case"Z":return"empty";default:return""}}(s[0]),o=Number(s.slice(1));if(!r)return console.error("invalid myth card origin:",r,s);if(!Number.isSafeInteger(o)||o<1)return console.error("invalid myth card skillId:",o,s);const a=e.push(o,r);t.$gameParty.addCardToLibrary(a)}function st(t,e){t.clear();for(const s of e)et(t,s)}function rt(t,e){t.length=0;for(const s of e){if(!Array.isArray(s)){console.error("invalid myth preset pair:",s,e);continue}const[r,o]=s;if("string"!=typeof r){console.error("invalid myth preset name:",r,s,e);continue}if(!Array.isArray(o)){console.error("invalid myth preset pack:",o,s,e);continue}const a=new Game_Cards(r);st(a,o),t.push(a)}}function ot(t,e){return t.length==e.length&&t.every(((t,s)=>{return r=t,o=e[s],r._origin===o._origin&&r._skillId===o._skillId;var r,o}))}function at(t){return t?t.map((t=>[t.name,Array.from(t._data)])):[]}function nt(t,e){return t.length===e.length&&t.every(((t,s)=>function(t,e){const[s,r]=t,[o,a]=e;return s===o&&ot(r,a)}(t,e[s])))}if(t.Game_Party.prototype.onChangeDeckPresets=function(){const t=tt(this._deckPresets);e.save(!1,"mythCardsParty",{mythDeckPresets:t})},t.Game_Actor.prototype.mythCardsDataName=function(){return`mythCards${this.actorId()}`},t.Game_Actor.prototype.onChangeSkillCards=function(){const t=Y(this._skillCards);e.save(!1,this.mythCardsDataName(),{mythSkillCards:t})},t.Game_Actor.prototype.onChangeCardDeck=function(){const s=Y(t.$gameParty.inBattle()?this._deckCopy:this._cardDeck);e.save(!1,this.mythCardsDataName(),{mythCardDeck:s})},t.Game_Actor.prototype.onChangeDeckPresets=function(){const t=tt(this._deckPresets);e.save(!1,this.mythCardsDataName(),{mythDeckPresets:t})},t.Game_Actor.prototype.onChangeDeckPresetIndex=function(){const t=this._deckPresetIndex;e.save(!1,this.mythCardsDataName(),{mythDeckPresetIndex:t})},V&&V.CGC){const s=t.Game_Actor.prototype.learnSkill;t.Game_Actor.prototype.learnSkill=function(t){const e=this._skillCards?Array.from(this._skillCards._data):[],r=this._cardDeck?Array.from(this._cardDeck._data):[];if(s.call(this,t),!this.mustSync())return;const o=this._skillCards?Array.from(this._skillCards._data):[],a=this._cardDeck?Array.from(this._cardDeck._data):[];ot(e,o)||this.onChangeSkillCards(),ot(r,a)||this.onChangeCardDeck()};const r=t.Game_Actor.prototype.forgetSkill;t.Game_Actor.prototype.forgetSkill=function(t){const e=this._skillCards?Array.from(this._skillCards._data):[],s=this._cardDeck?Array.from(this._cardDeck._data):[];if(r.call(this,t),!this.mustSync())return;const o=this._skillCards?Array.from(this._skillCards._data):[],a=this._cardDeck?Array.from(this._cardDeck._data):[];ot(e,o)||this.onChangeSkillCards(),ot(s,a)||this.onChangeCardDeck()};const o=t.Game_Actors.prototype.fetchAsync;t.Game_Actors.prototype.fetchAsync=async function(t){const s=await o.call(this,t);if(s){const{mythSkillCards:t,mythCardDeck:r,mythDeckPresets:o,mythDeckPresetIndex:a}=await e.loadAsync(!1,s.mythCardsDataName());s._skillCards&&Array.isArray(t)&&st(s._skillCards,t),s._cardDeck&&Array.isArray(r)&&st(s._cardDeck,r),s._deckPresets&&Array.isArray(o)&&rt(s._deckPresets,o),"number"==typeof a&&(s._deckPresetIndex=a)}return s}}else s("no myth cards base plugin");if(V&&V.CGC&&V.CGC.Deck){const s=V.CGC.Deck.addCardToDeck;V.CGC.Deck.addCardToDeck=function(e,r,o,a){const n=t.$gameActors.actor(e),c=at(t.$gameParty._deckPresets),i=at(n?._deckPresets);if(s.call(this,e,r,o,a),!n||!n.mustSync())return;const h=at(t.$gameParty._deckPresets),p=at(n._deckPresets);nt(c,h)||t.$gameParty.onChangeDeckPresets(),nt(i,p)||n.onChangeDeckPresets()};const r=V.CGC.Deck.removeCardFromDeck;V.CGC.Deck.removeCardFromDeck=function(e,s,o,a){const n=t.$gameActors.actor(e),c=at(t.$gameParty._deckPresets),i=at(n?._deckPresets);if(r.call(this,e,s,o,a),!n||!n.mustSync())return;const h=at(t.$gameParty._deckPresets),p=at(n._deckPresets);nt(c,h)||t.$gameParty.onChangeDeckPresets(),nt(i,p)||n.onChangeDeckPresets()};const o=Scene_DeckEditor.prototype.addCardToDeck;Scene_DeckEditor.prototype.addCardToDeck=function(){const e=this.actor(),s=at(t.$gameParty._deckPresets),r=at(e?._deckPresets);if(o.call(this),!e||!e.mustSync())return;const a=at(t.$gameParty._deckPresets),n=at(e._deckPresets);nt(s,a)||t.$gameParty.onChangeDeckPresets(),nt(r,n)||e.onChangeDeckPresets()};const a=Scene_DeckEditor.prototype.removeCardFromDeck;Scene_DeckEditor.prototype.removeCardFromDeck=function(){const e=this.actor(),s=at(t.$gameParty._deckPresets),r=at(e?._deckPresets);if(a.call(this),!e||!e.mustSync())return;const o=at(t.$gameParty._deckPresets),n=at(e._deckPresets);nt(s,o)||t.$gameParty.onChangeDeckPresets(),nt(r,n)||e.onChangeDeckPresets()};const n=Scene_DeckSelector.prototype.onNameInputOk;Scene_DeckSelector.prototype.onNameInputOk=function(){const e=this.actor(),s=at(t.$gameParty._deckPresets),r=at(e?._deckPresets);if(n.call(this),!e||!e.mustSync())return;const o=at(t.$gameParty._deckPresets),a=at(e._deckPresets);nt(s,o)||t.$gameParty.onChangeDeckPresets(),nt(r,a)||e.onChangeDeckPresets()};const c=t.Game_Actor.prototype.equipDeck;t.Game_Actor.prototype.equipDeck=function(t){const e=this._cardDeck?Array.from(this._cardDeck._data):[],s=this._deckPresetIndex;if(c.call(this,t),!this.mustSync())return;const r=this._cardDeck?Array.from(this._cardDeck._data):[],o=this._deckPresetIndex;ot(e,r)||this.onChangeCardDeck(),s!==o&&this.onChangeDeckPresetIndex()};const i=t.Game_Actor.prototype.createDeck;t.Game_Actor.prototype.createDeck=function(){const e=at(t.$gameParty._deckPresets),s=at(this._deckPresets);if(i.call(this),!this.mustSync())return;const r=at(t.$gameParty._deckPresets),o=at(this._deckPresets);nt(e,r)||t.$gameParty.onChangeDeckPresets(),nt(s,o)||this.onChangeDeckPresets()};const h=t.Game_Actor.prototype.copyDeck;t.Game_Actor.prototype.copyDeck=function(e){const s=at(t.$gameParty._deckPresets),r=at(this._deckPresets),o=this._deckPresetIndex;if(h.call(this,e),!this.mustSync())return;const a=at(t.$gameParty._deckPresets),n=at(this._deckPresets),c=this._deckPresetIndex;nt(s,a)||t.$gameParty.onChangeDeckPresets(),nt(r,n)||this.onChangeDeckPresets(),o!==c&&this.onChangeDeckPresetIndex()};const p=t.Game_Actor.prototype.deleteDeck;t.Game_Actor.prototype.deleteDeck=function(e){const s=at(t.$gameParty._deckPresets),r=at(this._deckPresets),o=this._deckPresetIndex;if(p.call(this,e),!this.mustSync())return;const a=at(t.$gameParty._deckPresets),n=at(this._deckPresets),c=this._deckPresetIndex;nt(s,a)||t.$gameParty.onChangeDeckPresets(),nt(r,n)||this.onChangeDeckPresets(),o!==c&&this.onChangeDeckPresetIndex()};const m=t.Game_Party.prototype.addActor;t.Game_Party.prototype.addActor=function(t){const e=at(this._deckPresets);m.call(this,t);nt(e,at(this._deckPresets))||this.onChangeDeckPresets()},e.start(!1,"mythCardsParty",(e=>{const{mythDeckPresets:s}=e;t.$gameParty._deckPresets&&s&&Array.isArray(s)&&rt(t.$gameParty._deckPresets,s)}))}else s("no myth cards base plugin");const ct=t.Game_System.prototype.addTimesEnemySeen;t.Game_System.prototype.addTimesEnemySeen=function(t,s){const r=this._timesEnemySeen[t];ct.call(this,t,s);const o=this._timesEnemySeen[t];r!==o&&e.save(!1,"visuBestSee",{[t]:o})};const it=t.Game_System.prototype.addTimesEnemyDefeated;t.Game_System.prototype.addTimesEnemyDefeated=function(t,s){const r=this._timesEnemyDefeated[t];it.call(this,t,s);const o=this._timesEnemyDefeated[t];r!==o&&e.save(!1,"visuBestDef",{[t]:o})},e.start(!1,"visuBestSee",(e=>{const s=[];for(const t in e){const r=Number(t),o=e[r];"number"==typeof r&&Number.isInteger(r)?"number"==typeof o&&Number.isInteger(o)?s.push([r,o]):console.error("invalid bestiary seen value:",r,o):console.error("invalid bestiary seen id:",r,o)}t.$gameSystem._timesEnemySeen=Object.fromEntries(s),t.$gameSystem._defeatedEnemies=s.filter((([t,e])=>e>0)).map((([t,e])=>t))})),e.start(!1,"visuBestDef",(e=>{const s=[];for(const t in e){const r=Number(t),o=e[r];"number"==typeof r&&Number.isInteger(r)?"number"==typeof o&&Number.isInteger(o)?s.push([r,o]):console.error("invalid bestiary defeated value:",r,o):console.error("invalid bestiary defeated id:",r,o)}t.$gameSystem._timesEnemyDefeated=Object.fromEntries(s)}));const ht=t.JsonEx.makeDeepCopy;t.JsonEx.makeDeepCopy=function(t){const e=ht.call(this,t);return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),e._deepCopy=!0,e}})();